name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          
  build-release:
    name: Build Release on ${{ matrix.os }}
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: yastwai
            asset_name: yastwai-linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: yastwai
            asset_name: yastwai-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: yastwai
            asset_name: yastwai-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: yastwai.exe
            asset_name: yastwai-windows-amd64.exe
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.8
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream 