---
description: branch_rules
globs: *
alwaysApply: true
---

# YASTWAI Project - Branch Management Rules

## CRITICAL BRANCH PROTECTION POLICIES
- NEVER WORK DIRECTLY ON THE MAIN BRANCH UNDER ANY CIRCUMSTANCES
- VERIFY BRANCH STATUS AT START OF EVERY USER INTERACTION
- AUTOMATICALLY CREATE A FEATURE BRANCH IF ON MAIN BRANCH
- NOTIFY USER WHEN BRANCH ACTIONS ARE TAKEN

## Mandatory Branch Verification 
- The VERY FIRST ACTION in every user interaction must be to verify current branch status
- Run this command: `./scripts/ai-protect-main.sh --no-auto-branch`
- If this command fails OR shows you're on main branch, immediately create a new branch before any other actions

## Automatic Branch Creation (when on main)
- When working with a user and the current branch is "main", IMMEDIATELY run:
  `./scripts/ai-protect-main.sh --auto-branch "descriptive-feature-name"`
- This script will:
  1. Detect that you're on main branch
  2. Create a new feature branch automatically
  3. Move any uncommitted changes to the new branch
  4. Notify the user about the branch change

## Branch Update Commands
- To update main branch from a feature branch:
  `./scripts/ai-update-main.sh`

- To update feature branch with main branch changes:
  `./scripts/ai-branch.sh --update-feature-branch`

## Prohibited Branch Actions
- NEVER use raw git branch commands directly:
  - NO `git checkout`
  - NO `git branch`
  - NO direct branch manipulation

## Verification After Branch Operations
- After ANY operation that might change branches, re-verify current branch:
  `./scripts/ai-protect-main.sh --no-auto-branch`

## Error Handling for Branch Operations
- If any branch command fails, immediately notify the user and stop
- Do not proceed with further operations until branch status is resolved
- Provide clear instructions to the user about what went wrong

## Branch Naming Guidelines
- Feature branches should have descriptive names in kebab-case
- Use format: `feature-name-description` or `fix-issue-description`
- Avoid generic names like "feature" or "fix"

Workflow Guidelines:
1. VERIFY CURRENT BRANCH before EVERY operation:
   ```bash
   ./scripts/ai-branch.sh --check-only
   ```
   
2. For new work unrelated to the current branch, create a new feature branch from main:
   ```bash
   ./scripts/ai-branch.sh --new-branch "feature-name" --is-related false
   ```
   
3. When updating the main branch, always update it first before creating a new branch:
   ```bash
   ./scripts/ai-update-main.sh
   ./scripts/ai-branch.sh --new-branch "feature-name" --is-related false
   ```
   
4. To keep a feature branch in sync with main, use the rebase option:
   ```bash
   ./scripts/ai-update-main.sh --rebase-current
   ```
   
5. CONTINUAL VERIFICATION: After any branch-related operation, verify current branch again:
   ```bash
   ./scripts/ai-branch.sh --check-only
   ``` 